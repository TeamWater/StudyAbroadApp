// function doClick(e) {
    // $.menu.open();
   // } 
 // var Cloud = require('ti.cloud');
 // Cloud.debug = true;
//  
 // Cloud.Users.login({ 
    // login: "mcritter42",
    // password: "critter42"
// }, function(e) {
    // if (e.success) {
        // Ti.API.info("Logged in user, id = " + users[0].id + ", session ID = " + Cloud.sessionId);
    // } else {
        // Ti.API.info("Login failed.");
    // }
// });
//    
// Cloud.Events.show({
    // event_id: '55130f8eac4547febdac2a75'
// }, function (e) {
    // if (e.success) {
        // var event = e.events[0];
        // alert('Success:\n' +
            // 'id: ' + event.id + '\n' +
            // 'name: ' + event.name + '\n' +
            // 'updated_at: ' + event.updated_at);
    // } else {
        // alert('Error:\n' +
            // ((e.error && e.message) || JSON.stringify(e)));
    // }
// });


var win = Ti.UI.createWindow({backgroundColor: 'white'});
var plainTemplate = {
    childTemplates: [
        {
            type: 'Ti.UI.Label', // Use a label
            bindId: 'rowtitle',  // Bind ID for this label
            properties: {        // Sets the Label.left property
                left: '10dp'
            }
        },
        {
            type: 'Ti.UI.ImageView',  // Use an image view
            bindId: 'pic',            // Bind ID for this image view
            properties: {             // Sets the ImageView.image property
            	image: 'KS_nav_ui.png'
            }
        },                    
        {
            type: 'Ti.UI.Button',   // Use a button
            bindId: 'button',       // Bind ID for this button
            properties: {           // Sets several button properties
                width: '80dp',
                height: '30dp',                        	
                right: '10dp',
                title: 'press me'
            },
            events: { click : report }  // Binds a callback to the button's click event
        }
    ]
};
function report(e) {
	Ti.API.info(e.type);
}
var listView = Ti.UI.createListView({
 // Maps the plainTemplate object to the 'plain' style name
    templates: { 'plain': plainTemplate },
 // Use the plain template, that is, the plainTemplate object defined earlier
 // for all data list items in this list view
    defaultItemTemplate: 'plain' 
});
var data = [];
for (var i = 0; i < 10; i++) {
    data.push({
 // Maps to the rowtitle component in the template
 // Sets the text property of the Label component
        rowtitle : { text: 'Row ' + (i + 1) },
 // Sets the regular list data properties
        properties : {
            itemId: 'row' + (i + 1),
            accessoryType: Ti.UI.LIST_ACCESSORY_TYPE_NONE
        }
    });
}
var section = Ti.UI.createListSection({items: data});
listView.sections = [section];
listView.addEventListener('itemclick', function(e){
 // Only respond to clicks on the label (rowtitle) or image (pic)
 if (e.bindId == 'rowtitle' || e.bindId == 'pic') {
        var item = e.section.getItemAt(e.itemIndex);
 if (item.properties.accessoryType == Ti.UI.LIST_ACCESSORY_TYPE_NONE) {
            item.properties.accessoryType = Ti.UI.LIST_ACCESSORY_TYPE_CHECKMARK;
        }
 else {
            item.properties.accessoryType = Ti.UI.LIST_ACCESSORY_TYPE_NONE;
        }
        e.section.updateItemAt(e.itemIndex, item);
    }      
});
win.add(listView);
win.open();
