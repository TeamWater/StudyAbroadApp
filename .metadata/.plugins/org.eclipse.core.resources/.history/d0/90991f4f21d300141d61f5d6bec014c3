function S4() {
	return ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);
}

function guid() {
	return S4() + S4() + "-" + S4() + "-" + S4() + "-" + S4() + "-" + S4() + S4() + S4();
}

function InitAdapter(config) {
	Cloud = require("ti.cloud"), Cloud.debug = !0, config.Cloud =
	Cloud;
	
function getObject(_model, _opts, _deferred) {
	var object_name = _model.config.settings.object_name,
	    object_method = Cloud[_model.config.settings.object_method];
	// if this is a custom object then I need to provide the classname

	Ti.API.debug(" searching for object id " + JSON.stringify(_opts.data));
	object_method.show(_opts.data, function(e) {
		if (e.success) {
			if (_model.id) {
				_model.meta = e.meta;
				_opts.success && _opts.success(e[object_name][0]), _model.trigger("fetch");
				return deferred.resolve(e[object_name][0]);
			}
		} else {
			Ti.API.error(e);
			_opts.error && _opts.error(e.error && e.message || e);
			return deferred.reject(e);
		}
	});
}